name: Deploy Ganesha to Hostinger

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, zip
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Create production .env file
        run: |
          cat > .env << 'EOF'
          APP_NAME="Ganesha"
          APP_ENV=production
          APP_KEY=${{ secrets.APP_KEY }}
          APP_DEBUG=false
          APP_URL=https://ganeshainstitute.org
          APP_LOCALE=en
          APP_FALLBACK_LOCALE=en
          APP_FAKER_LOCALE=en_US
          APP_MAINTENANCE_DRIVER=file
          PHP_CLI_SERVER_WORKERS=4
          BCRYPT_ROUNDS=12
          LOG_CHANNEL=stack
          LOG_STACK=single
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=3306
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          SESSION_ENCRYPT=false
          SESSION_PATH=/
          SESSION_DOMAIN=null
          BROADCAST_CONNECTION=log
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          CACHE_STORE=file
          MEMCACHED_HOST=127.0.0.1
          REDIS_CLIENT=phpredis
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          MAIL_MAILER=smtp
          MAIL_HOST=smtp.gmail.com
          MAIL_PORT=587
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          MAIL_ENCRYPTION=tls
          MAIL_FROM_ADDRESS=${{ secrets.MAIL_USERNAME }}
          MAIL_FROM_NAME="Ganesha"
          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false
          VITE_APP_NAME="Ganesha"
          RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}
          TINYMCE_API_KEY=${{ secrets.TINYMCE_API_KEY }}
          MIDTRANS_MERCHANT_ID=G676052948
          MIDTRANS_CLIENT_KEY=${{ secrets.MIDTRANS_CLIENT_KEY }}
          MIDTRANS_SERVER_KEY=${{ secrets.MIDTRANS_SERVER_KEY }}
          MIDTRANS_IS_PRODUCTION=false
          MIDTRANS_IS_SANITIZED=true
          MIDTRANS_IS_3DS=true
          VITE_MIDTRANS_CLIENT_KEY=${{ secrets.MIDTRANS_CLIENT_KEY }}
          EOF

      - name: Install Composer dependencies
        run: composer install --optimize-autoloader --no-dev --no-interaction --prefer-dist

      - name: Install NPM dependencies
        run: npm ci

      - name: Build assets with Vite
        run: npm run build

      - name: Prepare deployment for shared hosting
        run: |
          # Create deployment structure
          mkdir -p deployment/laravel

          # Move Laravel core files to laravel subfolder
          cp -r app deployment/laravel/
          cp -r bootstrap deployment/laravel/
          cp -r config deployment/laravel/
          cp -r database deployment/laravel/
          cp -r resources deployment/laravel/
          cp -r routes deployment/laravel/
          cp -r storage deployment/laravel/
          cp -r vendor deployment/laravel/
          cp .env deployment/laravel/
          cp artisan deployment/laravel/

          # Move public files to root deployment folder
          cp -r public/* deployment/

          # Update index.php to point to laravel subfolder
          sed -i "s|__DIR__.'/../|__DIR__.'/laravel/|g" deployment/index.php
          sed -i "s|require_once __DIR__.'/../vendor/autoload.php';|require_once __DIR__.'/laravel/vendor/autoload.php';|g" deployment/index.php
          sed -i "s|require_once __DIR__.'/../bootstrap/app.php';|require_once __DIR__.'/laravel/bootstrap/app.php';|g" deployment/index.php

          # Create .htaccess for Hostinger
          cat > deployment/.htaccess << 'EOF'
          <IfModule mod_rewrite.c>
              <IfModule mod_negotiation.c>
                  Options -MultiViews -Indexes
              </IfModule>

              RewriteEngine On

              # Handle Inertia.js and SPA routes
              RewriteCond %{REQUEST_URI} ^/(.*)?$
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteRule ^.*$ /index.php [L]

              # Redirect Trailing Slashes If Not A Folder...
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteCond %{REQUEST_URI} (.+)/$
              RewriteRule ^ %1 [L,R=301]

              # Send Requests To Front Controller...
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteRule ^ index.php [L]
          </IfModule>
          EOF

          # Create post-deployment script
          cat > deployment/setup-after-deploy.php << 'EOF'
          <?php
          echo "=== Ganesha Post-Deployment Setup ===\n";

          // Change to laravel directory
          chdir('laravel');

          // Create storage symlink
          if (!file_exists('../storage')) {
              if (symlink('laravel/storage/app/public', '../storage')) {
                  echo "✅ Storage symlink created\n";
              } else {
                  echo "❌ Failed to create storage symlink\n";
              }
          } else {
              echo "✅ Storage symlink already exists\n";
          }

          // Set proper permissions
          chmod('storage', 0755);
          chmod('storage/logs', 0755);
          chmod('storage/framework', 0755);
          chmod('storage/framework/cache', 0755);
          chmod('storage/framework/sessions', 0755);
          chmod('storage/framework/views', 0755);
          chmod('bootstrap/cache', 0755);

          echo "✅ Permissions set\n";

          // Clear caches
          exec('php artisan config:clear 2>&1', $output1, $return1);
          exec('php artisan route:clear 2>&1', $output2, $return2);
          exec('php artisan view:clear 2>&1', $output3, $return3);

          echo "✅ Caches cleared\n";

          // Cache for production
          exec('php artisan config:cache 2>&1', $output4, $return4);
          exec('php artisan route:cache 2>&1', $output5, $return5);
          exec('php artisan view:cache 2>&1', $output6, $return6);

          echo "✅ Production caches created\n";

          // Run migrations (uncomment after first successful deployment)
          // exec('php artisan migrate --force 2>&1', $migrationOutput, $migrationReturn);
          // echo "✅ Migrations run\n";

          echo "🎉 Ganesha deployment setup completed!\n";
          ?>
          EOF

      - name: Deploy to Hostinger FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_SERVER_DIR }}/
          local-dir: ./deployment/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/tests/**
            **/.env.example
            **/.gitignore
            **/.gitattributes
            **/package*.json
            **/vite.config.js
            **/tailwind.config.js
            **/postcss.config.js
            **/phpunit.xml
            **/.DS_Store
            **/Thumbs.db
